a:11:{s:4:"name";s:20:"yoko_theme_variables";s:6:"status";s:1:"1";s:6:"author";s:16:"Stephan Hochhaus";s:10:"author_uri";s:19:"http://yoko.yauh.de";s:7:"version";s:4:"1.09";s:11:"description";s:35:"Manage TXP Theme Variables for Yoko";s:4:"help";s:6899:"<h1><strong>yoko_theme_variables</strong> &#8211; Manage <span class="caps">TXP</span> Theme Variables</h1>

	<p>This plugin provides:</p>

	<ul>
		<li>a new "Yoko Variables" tab under "Presentation" to manage this theme's variables</li>
		<li>a new form, <em>yoko_theme_variables</em>, to store the variables</li>
	</ul>

	<h2><strong>Installation</strong></h2>

	<p>A new form, called <em>yoko_theme_variables</em>, will be installed when you visit the "Theme Variables" tab for the first time.</p>

	<p>The variables are brought into operation by this line of code:</p>

	<p><code>&lt;txp:output_form form="yoko_theme_variables" /&gt;</code></p>

	<p>at the top of all your web pages.</p>

	<h2><strong>Yoko Variables tab</strong></h2>

	<p>Users will be able to see the "Yoko Variables" tab under "Presentation" if they have the correct permissions to go there.  This provides:</p>

	<ul>
		<li>a list of theme variables &amp; their current values</li>
		<li>the ability to modify the values</li>
		<li>an admin function to take a backup copy of the <em>yoko_theme_variables</em> form in <em>yoko_theme_variables_copy</em></li>
	</ul>

	<p>Tooltips are available here &#8211; just hover over anything with a dashed underline.</p>

	<p>Additional variables can only be added via the <em>yoko_theme_variables</em> form template which restricts access to this facility to those who have the appropriate permissions to edit form templates.</p>

	<p><span style="color:#CC2B00;"><strong>yoko_theme_variables</strong> is a plugin specific to the Yoko theme and cannot be used for any other theme.</span></p>

	<h2><strong>Installed Variables Information</strong></h2>

	<p><strong>contact_form_email</strong> - E-Mail address to be used for the contact form.</p>
	<p><strong>header_image_name</strong> - Provide a relative path to your header image you wish to use. Default: <em>tpl/yoko/assets/images/headers/ginko.jpg</em></p>
	<p><strong>site_logo</strong> - for Facebook OpenGraph, unused in this release.</p>
	<p><strong>meta_keywords</strong> - If an article list is presented this is the value for the meta tag for site keywords.</p>
	<p><strong>preview_highlight_color</strong> - if defined this will highlight the comment preview to indicate that it is not submitted yet. Default value: <em>#FF0</em>.</p>
	<p><strong>custom_link_color</strong> - Links are displayed in this color - change only if you plan to adjust the color scheme of Yoko. Default value: <em>#009BC2</em>.</p>
	<p><strong>amazon_link</strong> - Give the full link to your Amazon wishlist to display it in the social links widget. If empty, no icon will be displayed.</p>
	<p><strong>delicious_link</strong> - Give the full link to your delicious profile to display it in the social links widget. If empty, no icon will be displayed.</p>
	<p><strong>doonited_link</strong> - Give the full link to your Doonited profile to display it in the social links widget. If empty, no icon will be displayed.</p>
	<p><strong>facebook_link</strong> - Give the full link to your Facebook profile to display it in the social links widget. If empty, no icon will be displayed.</p>
	<p><strong>foursquare_link</strong> - Give the full link to your Foursquare profile to display it in the social links widget. If empty, no icon will be displayed.</p>
	<p><strong>qype_link</strong> - Give the full link to your Qype profile to display it in the social links widget. If empty, no icon will be displayed.</p>
	<p><strong>feedburner_name</strong> - By default Yoko uses Textpattern's built-in feed, but if a <em>feedburner_name</em> is provided Feedburner is used instead.</p>
	<p><strong>flickr_link</strong> - Give the full link to your flickr profile to display it in the social links widget. If empty, no icon will be displayed.</p>
	<p><strong>github_link</strong> - Give the full link to your Github profile to display it in the social links widget. If empty, no icon will be displayed.</p>
	<p><strong>googleplus_link</strong> - Give the full link to your Google+ profile to display it in the social links widget. If empty, no icon will be displayed.</p>
	<p><strong>lastfm_link</strong> - Give the full link to your last.fm profile to display it in the social links widget. If empty, no icon will be displayed.</p>
	<p><strong>linkedin_link</strong> - Give the full link to your linkedin profile to display it in the social links widget. If empty, no icon will be displayed.</p>
	<p><strong>stellar_link</strong> - Give the full link to your Stellar.io profile to display it in the social links widget. If empty, no icon will be displayed.</p>
	<p><strong>tumblr_link</strong> - Give the full link to your Tumblr to display it in the social links widget. If empty, no icon will be displayed.</p>
	<p><strong>twitter_name</strong> - Give your twitter name to display a link to your Twitter profile in the social links widget. If empty, no icon will be displayed.</p>
	<p><strong>vimeo_link</strong> - Give the full link to your vimeo profile to display it in the social links widget. If empty, no icon will be displayed.</p>
	<p><strong>youtube_link</strong> - Give the full link to your youtube profile to display it in the social links widget. If empty, no icon will be displayed.</p>
	<p><strong>flickr_badge_id</strong> - Get your Flickr badge ID <a href="http://www.flickr.com/badge.gne">at Flickr</a> and put it in here. If a value is present, the flickr widget on the sidebar 2 will be displayed.</p>
	<p><strong>show_category_menu(yes_or_no)</strong> - if set to <em>yes</em>, a submenu with all categories and subcategories is presented just below the header image. If set to <em>no</em> the menu will be omitted.</p>
	<p><strong>number_of_articles_on_frontpage</strong> - number of articles on the frontpage. Default: 5.</p>
	<p><strong>number_of_links_in_sidebar</strong> - Number of links in the sidebar. Default: 5.</p>
	<p><strong>social_buttons(yes_or_no)</strong> - if set to <em>yes</em>, social sharing buttons for Twitter, Google+, and Facebook are shown. Default: yes.</p>
	<p><strong>facebook_application_id</strong> - for Facebook OpenGraph, unused in this release</p>
	<p><strong>addthis_user</strong> - for use with lam_addthis plugin, unused in this release.</p>
	<p><strong>addthis_brand</strong> - for use with lam_addthis plugin, unused in this release.</p>

	<h2><strong>Credits</strong></h2>

	<p>This plugin uses most of the code from Adi Gilbert's (gomedia) <code><a href="http://forum.textpattern.com/viewtopic.php?id=28720">adi_variables</a></code> plugin.</p>

	<p>Modifications to simplify the tab display and include the theme default variables were made by <a href="http://thebombsite.com/">Stuart Butcher</a> (thebombsite).</p>

	<p>Adjusted for the Yoko theme by <a href="mailto:stephan@yauh.de">Stephan Hochhaus</a>.</p>";s:4:"code";s:16463:"/*
	adi_variables - Manage TXP variables

	Written by Adi Gilbert

	Released under the GNU General Public License

	Version history:
	0.2	- enhancement: cope with TXP tags in variable values (for johnstephens)
	0.1	- initial release

	tbs_variables - Manage TXP Theme Variables

	Modifications to original plugin by Stuart Butcher

	Version history:
	1.0	- major modifications to original plugin - initial release

	yoko_theme_variables - Manage TXP Theme Variables (what you are looking at right now)

	Modifications by Stephan Hochhaus

	Version history:
	1.0	- initial release, adjusted for Yoko Theme
	1.08	- Compatible with Yoko Theme 1.08
	1.09	- Compatible with Yoko Theme 1.09
*/

global $debug,$h,$ps,$this_variable,$admin_privs,$theme_variables_boundary;

$theme_variables_boundary = '<txp:hide>PUBLIC variables below, ADMIN variables above</txp:hide>';

$debug = FALSE;

// tooltip help information
$h['cp'] = 'Make a backup copy of the yoko_theme_variables form (in yoko_theme_variables_copy)';
$h['rs'] = 'Reset the yoko_theme_variables form to a sample configuration. BEWARE, YOUR VARIABLE DATA WILL BE OVERWRITTEN';
$h['vr'] = "The variable's name (spaces &amp; quotes not allowed)";
$h['vl'] = "The variable's value (TXP tags are allowed)";
$h['pu'] = "Tick if you want Staff Writers or Freelancers to be able to modify the variable ";

if (txpinterface === 'admin') {
	$myevent = 'yoko_theme_variables_admin';
	$mytab = 'Yoko Variables';

	// access to variables tab & public variable update
	$tab_privs = '1,2,3,4,5,6'; // everybody
	// admin variable update, add/delete, admin buttons (i.e. anybody who can access Forms!)
	$admin_privs = 'form'; // see lib/admin_config.php: '1,2,3,6' publisher, manager, copy writer, designer

	/*	User privilege summary:
		0 - none		- can't even login
		1 - publisher		- full capability
		2 - manager		- full capability
		3 - copy editor		- full capability
		4 - staff writer	- public variable update only
		5 - freelancer		- public variable update only
		6 - designer		- full capability
	*/

	// register theme_variables tab
	add_privs("yoko_theme_variables_admin",$tab_privs);
	register_tab("presentation", $myevent, $mytab);
	register_callback("yoko_theme_variables_admin", $myevent);
}

function theme_variables_tip($term,$help) {
	return '<dfn'.
		' title="'.$help.'"'.
		' style="border-bottom:1px dashed black;font-style:normal"'.
		'>'.
		$term.
		'</dfn>';
}

function theme_variables_install($mode='') {
	$form = <<<EOF
<txp:hide>PUBLIC variables below, ADMIN variables above</txp:hide>
<txp:variable name="header_image_name" value='tpl/yoko/assets/images/headers/ginko.jpg' />
<txp:variable name="googleplus_link" value='http://google.com' />
<txp:variable name="twitter_name" value='' />
<txp:variable name="facebook_link" value='http://facebook.com' />
<txp:variable name="flickr_badge_id" value='' />
<txp:variable name="flickr_link" value='http://flickr.com' />
<txp:variable name="vimeo_link" value='http://vimeo.com' />
<txp:variable name="youtube_link" value='http://youtube.com' />
<txp:variable name="linkedin_link" value='http://linkedin.com' />
<txp:variable name="delicious_link" value='http:/del.icio.us' />
<txp:variable name="lastfm_link" value='http:/last.fm' />
<txp:variable name="feedburner_name" value='' />
<txp:variable name="meta_keywords" value='textpattern, blog, website' />
<txp:variable name="show_category_menu(yes_or_no)" value='yes' />
<txp:variable name="contact_form_email" value='mail@example.com' />
<txp:variable name="preview_highlight_color" value='#FF0' />
<txp:variable name="site_logo" value='tpl/yoko/assets/images/headers/ginko.jpg' />
<txp:variable name="facebook_application_id" value='' />
<txp:variable name="addthis_user" value='' />
<txp:variable name="addthis_brand" value='' />
EOF;
	if (!safe_field('name', 'txp_form', "name='yoko_theme_variables'")) // install default form
		return safe_insert('txp_form',
			"name='yoko_theme_variables',
			type='misc',
			Form='".doSlash($form)."'"
		);
	else if ($mode == 'reset') // overwrite form with default
		return theme_variables_update($form);
	else if ($mode == 'copy') { // copy yoko_theme_variables form to yoko_theme_variables_copy CONSOLIDATE CODE
		$raw = theme_variables_read_form(); // read form
		if (empty($raw))
			return FALSE;
		if (safe_field('name', 'txp_form', "name='yoko_theme_variables_copy'")) // update existing form copy
			return safe_update('txp_form',
				"Form='".doSlash($raw['Form'])."'",
				"name='yoko_theme_variables_copy'"
			);
		else // add new form copy
			return safe_insert('txp_form',
				"name='yoko_theme_variables_copy',
				type='misc',
				Form='".doSlash($raw['Form'])."'"
			);
	}
}

function theme_variables_read_form() {
	$rs = safe_query('SELECT Form FROM '.safe_pfx('txp_form')." WHERE name='yoko_theme_variables'");
	if ($rs)
		return nextRow($rs); // $a = array("Form' => '<txp:variable name="example_admin" ..... )
	else
		return array();
}

function theme_variables_validate($txp_var_tag) { // MAKE CASE INSENSITIVE??
	// COMBINE THESE?? STRICTER MATCH??
	// <txp:variable name="jjjjjjj" value="jjj" />
	// ^(<txp:variable).+(name=").*(").*(value=").*(").*(\/>)$
	// ^(<txp:variable).*(name=).*(value=).*(\/>)$
	$valid = preg_match('@^<txp:variable\ @',$txp_var_tag); // line starts "<txp:variable "
	$valid = $valid && preg_match('@/>@',$txp_var_tag); // line ends "/>"
	return $valid;
}

function theme_variables_get_vars($lines) {
	$vars = array();
	$public = FALSE;
	foreach ($lines as $index => $line) {
		$ok = theme_variables_validate($line);
		if (preg_match('@^(<txp:hide>PUBLIC)@',$line)) $public = TRUE; // look for demarcation
		if ($ok) {
			$var = theme_variables_extract($line);
			// create array('name' => array('value' => value, 'public' => boolean))
			$vars[$var['name']]['value'] = $var['value'];
			$vars[$var['name']]['public'] = $public;
		}
	}
	return $vars;
}

function theme_variables_extract($line) {
// extract variables & values from yoko_theme_variables form
// old (0.1) format: <txp:variable name="var" value="valuable" />
// new (0.2+) format: <txp:variable name="var" value='valuable' />
// old format extracted first (copes with 0.1 -> 0.2+ migration)
// downgrade: edit yoko_theme_variables form to change single to double quotes & install 0.1
	$var = array();
	$this_line = trim($line);
	if (theme_variables_validate($line)) {
		$diced = explode('"',$line); // use double quote delimiter first
		if (!empty($diced)) { // check that there's something there
			$var['name'] = $diced[1]; // var name will be second slice
			if (count($diced) != 5) { // must be new format
				$diced = explode("'",$line); // single quote delimiter
				$var['value'] = $diced[1]; // new format, value will be now be second slice
			}
			else // old format, value will be fourth slice
				$var['value'] = $diced[3];
		}
	}
	return $var;
}

function theme_variables_display_settings($vars) {
	global $admin_privs;
	$out = '';
	foreach ($vars as $name => $var) {
		if (has_privs($admin_privs)) // restrict access to admin capabilities
			$out .= tr(
					tda($name).
					tda(finput("text","ps_name[$name]",$var['value'],'','','',80)).
					tda(hinput("ps_public[$name]", "1", $var['public']),' style="text-align:center"')
					);
		else // public view
			if ($var['public']) // display variable
				$out .= tr(
						tda($name).
						tda(finput("text","ps_name[$name]",$var['value'],'','','',80)).
						tda(hinput("ps_public[$name]", $var['public'])) // hide public setting
						);
			else // hide variable input but display variable name/value
				$out .= tr(
						tda($name).
						tda(hinput("ps_name[$name]",$var['value']).$var['value']).
						tda(hinput("ps_public[$name]", $var['public'])) // hide public setting
						);
	}
	return $out;
}

function theme_variables_delete_button($var) {
	// CAN'T NEST FORMS!!
	/*return join('',
		array(
		'<form method="post" action="index.php" onsubmit="return confirm(\''.gTxt('confirm_delete_popup').'\');">',
		fInput('submit','','&#215;','smallerbox'),
		eInput('yoko_theme_variables_admin').sInput('delete').hInput('something',$var).'</form>'
		)
	);*/
	$event = 'yoko_theme_variables_admin';
	$step = 'delete';
	$url = '?event='.$event.a.'step='.$step.a.'variable='.$var;
	return
		'<a href="'
		.$url
		.'" class="dlink" title="Delete?" onclick="return verify(\''
		.$var
		.': '
		.gTxt('confirm_delete_popup')
		.'\')">&#215;</a>';
}

function theme_variables_update($form_contents) {
	global $debug;
	if (safe_field('name', 'txp_form', "name='yoko_theme_variables'")) {
		$res = safe_update('txp_form',
				"Form='".doSlash($form_contents)."'",
				"name='yoko_theme_variables'"
				);
	}
	else // Form not found
		return FALSE;
	return $res;
}

function theme_variables_variable_tag($name,$value) {
// generate TXP variable tag
	return '<txp:variable name="'.$name.'" '."value='".$value."' />"; // use single quotes for values
}

function theme_variables_form_update($ps_name,$ps_public,$new_name,$new_value,$new_public,$delete_me='') {
	global $theme_variables_boundary;
	$new_form = array();
	$admin_vars = $public_vars = $sorted_vars = array();
	if (!empty($new_name)) {
		$ps_name[$new_name] = $new_value;
		if ($new_public)
			$ps_public[$new_name] = TRUE;
	}
	if ($ps_name) { // there's at least one variable
		// sort vars: admin first, public last
		foreach ($ps_name as $name => $value) {
			if (isset($ps_public[$name]))
				$public_vars[$name] = $value;
			else {
				$ps_public[$name] = FALSE; // set it for use later, because POST VARS doesn't
				$admin_vars[$name] = $value;
			}
		}
		$sorted_vars = $admin_vars + $public_vars;
		// generate new form
		$public = FALSE;
		foreach ($sorted_vars as $name => $value) {
			if (!$public && $ps_public[$name]) { // start of public vars found
				$public = TRUE; // toggle public
				$new_form[] = $theme_variables_boundary; // demarcation
			}
			//$new_form[] = '<txp:variable name="'.$name.'" '."value='".$value."' />"; // use single quotes for values
			$new_form[] = theme_variables_variable_tag($name,$value);
		}
	}
	return $new_form;
}

function theme_variables_form_delete($delete_me) {
	global $theme_variables_boundary;
	$new_form = array();
	$raw = theme_variables_read_form(); // raw data from form
	$lines = explode("\n",$raw['Form']); // break up into lines
	$vars = theme_variables_get_vars($lines); // extract variables
	unset($vars[$delete_me]); // delete the appropriate variable
	// generate new form
	$public = FALSE;
	foreach ($vars as $name => $var) {
		if (!$public && $var['public']) { // start of public vars found
			$public = TRUE; // toggle public
			$new_form[] = $theme_variables_boundary; // demarcation
		}
		//$new_form[] = '<txp:variable name="'.$name.'" '."value='".$var['value']."' />"; // use single quotes for values
		$new_form[] = theme_variables_variable_tag($name,$var['value']);
	}
	return $new_form;
}

function theme_variables_debug() {
	global $debug,$event,$step,$something,$ps,$raw,$lines,$vars,$this_variable;
	echo "<p>Event: ".$event.", Step: ".$step.", Something: ".$something.", Variable: ".$this_variable."</p>";
	print "<h3>RAW FORM:</h3>";
	dmp($raw);
	print "<h3>LINE BY LINE:</h3>";
	foreach ($lines as $index => $line) {
		$line = htmlspecialchars($line); // replace angle brackets so tags not parsed
		print "Line ".$index.". ".$line."<br/>";
	}
	$public = FALSE;
	print "<br/><h3>ANALYSIS:</h3>";
	foreach ($lines as $index => $line) {
		$this_line = trim($line);
		if (empty($this_line))
			print "BLANK LINE<br/>";
		else {
			$ok = theme_variables_validate($line);
			$ok ? print "VAR " : print "OTHER ";
			if (preg_match('@^(<txp:hide>PUBLIC)@',$line)) $public = TRUE; // look for demarcation
			if ($ok)
				$public ? print '(PUBLIC): ' : print '(ADMIN): ';
			$line = htmlspecialchars($line); // replace angle brackets so tags not parsed
			print $line."<br/>";
		}
	}
	print "<br/><h3>VARIABLES DATA:</h3>";
	dmp($vars);
	print "<br/><h3>POSTED DATA (UPDATE EXISTING):</h3>";
	print_r(ps('ps_name'));
	print "<br/>";
	print_r(ps('ps_public'));
	print "<br/><h3>POSTED DATA (NEW):</h3>";
	print_r(ps('new_var'));
	print "<br/>";
	print_r(ps('new_value'));
	print "<br/>";
	print_r(ps('new_public'));
}

function yoko_theme_variables_admin($event, $step) {
	global $debug,$ps,$h,$event,$step,$something,$raw,$lines,$vars,$this_variable,$admin_privs;
	$message= '';
	$something = ps('something');
	$this_variable = gps('variable');
	// install yoko_theme_variables form if required
	if (!safe_field('name', 'txp_form', "name='yoko_theme_variables'")) // form not found
		if (theme_variables_install())
			$message = "installed OK";
		else
			$message = "install failed";
	if ($step == 'update') {
		$new_name = trim(ps('new_var'));
		// validate new variable name
		if (strpos($new_name,' '))
			$message = 'spaces not allowed in variable name';
		if (strpos($new_name,'"') || strpos($new_name,"'"))
			$message = 'quotes not allowed in variable name';
		if (ps('ps_name')) // then other variables exist (i.e. this is not the first)
			if (array_key_exists($new_name,ps('ps_name')))
				$message = "$new_name already exists";
		// add new variable to form
		if ($message == '') {
			$new_form = theme_variables_form_update(ps('ps_name'),ps('ps_public'),$new_name,ps('new_value'),ps('new_public'));
			$ok = theme_variables_update(join("\n",$new_form));
			$ok ?
				$message = "updated" :
				$message = "update failed";
		}
	}
	if ($step == 'delete') {
		if (has_privs($admin_privs)) { // double check privileges because this operation uses GET VARS
			$new_form = theme_variables_form_delete($this_variable);
			$ok = theme_variables_update(join("\n",$new_form));
			$ok ?
				$message = "$this_variable deleted" :
				$message = "delete failed";
		}
		else
			$message = "insufficient privileges";
	}
	if ($something == "reset") {
		$ok = theme_variables_install('reset');
		$ok ?
			$message = "form reset" :
			$message = "reset failed";
	}
	if ($something == "copy") {
		$ok = theme_variables_install('copy');
		$ok ?
			$message = "form copied" :
			$message = "copy failed";
	}
	// read contents of form
	$raw = theme_variables_read_form();
	if (empty($raw))
		$message = "unable to read form";
	// break up into individual lines
	$lines = explode("\n",$raw['Form']);
	// extract variables & values from form
	$vars = theme_variables_get_vars($lines); // ERROR MESSAGE IF NO VARS???
	if (trim($raw['Form']) == '')
		$message = "form is empty";
	else if (empty($vars))
		$message = "no variables found";
	// generate page
	if (!empty($message))
		$message = 'yoko_theme_variables: <b>'.$message.'</b>';
	pagetop('theme_variables admin',$message);
	if ($debug) {
		theme_variables_debug();
		if ($step == "update") {
			print "<br/><h3>NEW FORM:</h3>";
			dmp($new_form);
		}
	}
	// output table & input form
	echo form(
		startTable('list').
		tr(
			hcell(theme_variables_tip('Theme Variable',$h['vr'])).
			hcell(theme_variables_tip('Value',$h['vl'])).
			hcell(has_privs($admin_privs)?theme_variables_tip('',$h['pu']):'') // hide Public heading if required
			).
		theme_variables_display_settings($vars).
		endTable().
		tag(
			fInput("submit", "update", "Update", "smallerbox").
			eInput("yoko_theme_variables_admin").sInput("update"),
			'div',
			' align="center" style="margin-top:2em"'
		)
	);
	// admin functions
	if (has_privs($admin_privs)) { // restrict access to admin functions
		$debug ? $reset_button = " ".theme_variables_tip("Reset",$h['rs']).fInput("radio", "something", "reset", "edit", "", "", "20", "1") : $reset_button = '';
	    echo form(
			tag("Theme Variables Admin","h3").
			graf(
				$reset_button.
				" ".theme_variables_tip("Backup",$h['cp']).
				fInput("radio", "something", "copy", "edit", "", "", "20", "1").
	        	fInput("submit", "do_something", "Do admin", "smallerbox","",'return verify(\''.gTxt('are_you_sure').'\')')
			).
	        eInput('yoko_theme_variables_admin').sInput('admin')
			,"text-align:center;margin-top:3em"
		);
	}
}
";s:12:"code_restore";s:15548:"/*
	adi_variables - Manage TXP variables

	Written by Adi Gilbert

	Released under the GNU General Public License

	Version history:
	0.2	- enhancement: cope with TXP tags in variable values (for johnstephens)
	0.1	- initial release

	tbs_variables - Manage TXP Theme Variables

	Modifications to original plugin by Stuart Butcher

	Version history:
	1.0	- major modifications to original plugin - initial release

	yoko_theme_variables - Manage TXP Theme Variables

	Modifications by Stephan Hochhaus

	Version history:
	1.0	- initial release, adjusted for Yoko Theme



*/

global $debug,$h,$ps,$this_variable,$admin_privs,$theme_variables_boundary;

$theme_variables_boundary = '<txp:hide>PUBLIC variables below, ADMIN variables above</txp:hide>';

$debug = FALSE;

// tooltip help information
$h['cp'] = 'Make a backup copy of the yoko_theme_variables form (in yoko_theme_variables_copy)';
$h['rs'] = 'Reset the yoko_theme_variables form to a sample configuration. BEWARE, YOUR VARIABLE DATA WILL BE OVERWRITTEN';
$h['vr'] = "The variable's name (spaces &amp; quotes not allowed)";
$h['vl'] = "The variable's value (TXP tags are allowed)";
$h['pu'] = "Tick if you want Staff Writers or Freelancers to be able to modify the variable ";

if (txpinterface === 'admin') {
	$myevent = 'theme_variables_admin';
	$mytab = 'Theme Variables';

	// access to variables tab & public variable update
	$tab_privs = '1,2,3,4,5,6'; // everybody
	// admin variable update, add/delete, admin buttons (i.e. anybody who can access Forms!)
	$admin_privs = 'form'; // see lib/admin_config.php: '1,2,3,6' publisher, manager, copy writer, designer

	/*	User privilege summary:
		0 - none		- can't even login
		1 - publisher		- full capability
		2 - manager		- full capability
		3 - copy editor		- full capability
		4 - staff writer	- public variable update only
		5 - freelancer		- public variable update only
		6 - designer		- full capability
	*/

	// register theme_variables tab
	add_privs("theme_variables_admin",$tab_privs);
	register_tab("presentation", $myevent, $mytab);
	register_callback("theme_variables_admin", $myevent);
}

function theme_variables_tip($term,$help) {
	return '<dfn'.
		' title="'.$help.'"'.
		' style="border-bottom:1px dashed black;font-style:normal"'.
		'>'.
		$term.
		'</dfn>';
}

function theme_variables_install($mode='') {
	$form = <<<EOF
<txp:hide>PUBLIC variables below, ADMIN variables above</txp:hide>
<txp:variable name="header_image_name" value='headlines_logo.png' />
<txp:variable name="googleplus_link" value='' />
<txp:variable name="twitter_link" value='' />
<txp:variable name="facebook_link" value='' />
<txp:variable name="flickr_link" value='' />
<txp:variable name="vimeo_link" value='' />
<txp:variable name="youtube_link" value='' />
<txp:variable name="linkedin_link" value='' />
<txp:variable name="delicious_link" value='' />
<txp:variable name="feedburner_link" value='' />
EOF;
	if (!safe_field('name', 'txp_form', "name='yoko_theme_variables'")) // install default form
		return safe_insert('txp_form',
			"name='yoko_theme_variables',
			type='misc',
			Form='".doSlash($form)."'"
		);
	else if ($mode == 'reset') // overwrite form with default
		return theme_variables_update($form);
	else if ($mode == 'copy') { // copy yoko_theme_variables form to yoko_theme_variables_copy CONSOLIDATE CODE
		$raw = theme_variables_read_form(); // read form
		if (empty($raw))
			return FALSE;
		if (safe_field('name', 'txp_form', "name='yoko_theme_variables_copy'")) // update existing form copy
			return safe_update('txp_form',
				"Form='".doSlash($raw['Form'])."'",
				"name='yoko_theme_variables_copy'"
			);
		else // add new form copy
			return safe_insert('txp_form',
				"name='yoko_theme_variables_copy',
				type='misc',
				Form='".doSlash($raw['Form'])."'"
			);
	}
}

function theme_variables_read_form() {
	$rs = safe_query('SELECT Form FROM '.safe_pfx('txp_form')." WHERE name='yoko_theme_variables'");
	if ($rs)
		return nextRow($rs); // $a = array("Form' => '<txp:variable name="example_admin" ..... )
	else
		return array();
}

function theme_variables_validate($txp_var_tag) { // MAKE CASE INSENSITIVE??
	// COMBINE THESE?? STRICTER MATCH??
	// <txp:variable name="jjjjjjj" value="jjj" />
	// ^(<txp:variable).+(name=").*(").*(value=").*(").*(\/>)$
	// ^(<txp:variable).*(name=).*(value=).*(\/>)$
	$valid = preg_match('@^<txp:variable\ @',$txp_var_tag); // line starts "<txp:variable "
	$valid = $valid && preg_match('@/>@',$txp_var_tag); // line ends "/>"
	return $valid;
}

function theme_variables_get_vars($lines) {
	$vars = array();
	$public = FALSE;
	foreach ($lines as $index => $line) {
		$ok = theme_variables_validate($line);
		if (preg_match('@^(<txp:hide>PUBLIC)@',$line)) $public = TRUE; // look for demarcation
		if ($ok) {
			$var = theme_variables_extract($line);
			// create array('name' => array('value' => value, 'public' => boolean))
			$vars[$var['name']]['value'] = $var['value'];
			$vars[$var['name']]['public'] = $public;
		}
	}
	return $vars;
}

function theme_variables_extract($line) {
// extract variables & values from yoko_theme_variables form
// old (0.1) format: <txp:variable name="var" value="valuable" />
// new (0.2+) format: <txp:variable name="var" value='valuable' />
// old format extracted first (copes with 0.1 -> 0.2+ migration)
// downgrade: edit yoko_theme_variables form to change single to double quotes & install 0.1
	$var = array();
	$this_line = trim($line);
	if (theme_variables_validate($line)) {
		$diced = explode('"',$line); // use double quote delimiter first
		if (!empty($diced)) { // check that there's something there
			$var['name'] = $diced[1]; // var name will be second slice
			if (count($diced) != 5) { // must be new format
				$diced = explode("'",$line); // single quote delimiter
				$var['value'] = $diced[1]; // new format, value will be now be second slice
			}
			else // old format, value will be fourth slice
				$var['value'] = $diced[3];
		}
	}
	return $var;
}

function theme_variables_display_settings($vars) {
	global $admin_privs;
	$out = '';
	foreach ($vars as $name => $var) {
		if (has_privs($admin_privs)) // restrict access to admin capabilities
			$out .= tr(
					tda($name).
					tda(finput("text","ps_name[$name]",$var['value'],'','','',80)).
					tda(hinput("ps_public[$name]", "1", $var['public']),' style="text-align:center"')
					);
		else // public view
			if ($var['public']) // display variable
				$out .= tr(
						tda($name).
						tda(finput("text","ps_name[$name]",$var['value'],'','','',80)).
						tda(hinput("ps_public[$name]", $var['public'])) // hide public setting
						);
			else // hide variable input but display variable name/value
				$out .= tr(
						tda($name).
						tda(hinput("ps_name[$name]",$var['value']).$var['value']).
						tda(hinput("ps_public[$name]", $var['public'])) // hide public setting
						);
	}
	return $out;
}

function theme_variables_delete_button($var) {
	// CAN'T NEST FORMS!!
	/*return join('',
		array(
		'<form method="post" action="index.php" onsubmit="return confirm(\''.gTxt('confirm_delete_popup').'\');">',
		fInput('submit','','&#215;','smallerbox'),
		eInput('theme_variables_admin').sInput('delete').hInput('something',$var).'</form>'
		)
	);*/
	$event = 'theme_variables_admin';
	$step = 'delete';
	$url = '?event='.$event.a.'step='.$step.a.'variable='.$var;
	return
		'<a href="'
		.$url
		.'" class="dlink" title="Delete?" onclick="return verify(\''
		.$var
		.': '
		.gTxt('confirm_delete_popup')
		.'\')">&#215;</a>';
}

function theme_variables_update($form_contents) {
	global $debug;
	if (safe_field('name', 'txp_form', "name='yoko_theme_variables'")) {
		$res = safe_update('txp_form',
				"Form='".doSlash($form_contents)."'",
				"name='yoko_theme_variables'"
				);
	}
	else // Form not found
		return FALSE;
	return $res;
}

function theme_variables_variable_tag($name,$value) {
// generate TXP variable tag
	return '<txp:variable name="'.$name.'" '."value='".$value."' />"; // use single quotes for values
}

function theme_variables_form_update($ps_name,$ps_public,$new_name,$new_value,$new_public,$delete_me='') {
	global $theme_variables_boundary;
	$new_form = array();
	$admin_vars = $public_vars = $sorted_vars = array();
	if (!empty($new_name)) {
		$ps_name[$new_name] = $new_value;
		if ($new_public)
			$ps_public[$new_name] = TRUE;
	}
	if ($ps_name) { // there's at least one variable
		// sort vars: admin first, public last
		foreach ($ps_name as $name => $value) {
			if (isset($ps_public[$name]))
				$public_vars[$name] = $value;
			else {
				$ps_public[$name] = FALSE; // set it for use later, because POST VARS doesn't
				$admin_vars[$name] = $value;
			}
		}
		$sorted_vars = $admin_vars + $public_vars;
		// generate new form
		$public = FALSE;
		foreach ($sorted_vars as $name => $value) {
			if (!$public && $ps_public[$name]) { // start of public vars found
				$public = TRUE; // toggle public
				$new_form[] = $theme_variables_boundary; // demarcation
			}
			//$new_form[] = '<txp:variable name="'.$name.'" '."value='".$value."' />"; // use single quotes for values
			$new_form[] = theme_variables_variable_tag($name,$value);
		}
	}
	return $new_form;
}

function theme_variables_form_delete($delete_me) {
	global $theme_variables_boundary;
	$new_form = array();
	$raw = theme_variables_read_form(); // raw data from form
	$lines = explode("\n",$raw['Form']); // break up into lines
	$vars = theme_variables_get_vars($lines); // extract variables
	unset($vars[$delete_me]); // delete the appropriate variable
	// generate new form
	$public = FALSE;
	foreach ($vars as $name => $var) {
		if (!$public && $var['public']) { // start of public vars found
			$public = TRUE; // toggle public
			$new_form[] = $theme_variables_boundary; // demarcation
		}
		//$new_form[] = '<txp:variable name="'.$name.'" '."value='".$var['value']."' />"; // use single quotes for values
		$new_form[] = theme_variables_variable_tag($name,$var['value']);
	}
	return $new_form;
}

function theme_variables_debug() {
	global $debug,$event,$step,$something,$ps,$raw,$lines,$vars,$this_variable;
	echo "<p>Event: ".$event.", Step: ".$step.", Something: ".$something.", Variable: ".$this_variable."</p>";
	print "<h3>RAW FORM:</h3>";
	dmp($raw);
	print "<h3>LINE BY LINE:</h3>";
	foreach ($lines as $index => $line) {
		$line = htmlspecialchars($line); // replace angle brackets so tags not parsed
		print "Line ".$index.". ".$line."<br/>";
	}
	$public = FALSE;
	print "<br/><h3>ANALYSIS:</h3>";
	foreach ($lines as $index => $line) {
		$this_line = trim($line);
		if (empty($this_line))
			print "BLANK LINE<br/>";
		else {
			$ok = theme_variables_validate($line);
			$ok ? print "VAR " : print "OTHER ";
			if (preg_match('@^(<txp:hide>PUBLIC)@',$line)) $public = TRUE; // look for demarcation
			if ($ok)
				$public ? print '(PUBLIC): ' : print '(ADMIN): ';
			$line = htmlspecialchars($line); // replace angle brackets so tags not parsed
			print $line."<br/>";
		}
	}
	print "<br/><h3>VARIABLES DATA:</h3>";
	dmp($vars);
	print "<br/><h3>POSTED DATA (UPDATE EXISTING):</h3>";
	print_r(ps('ps_name'));
	print "<br/>";
	print_r(ps('ps_public'));
	print "<br/><h3>POSTED DATA (NEW):</h3>";
	print_r(ps('new_var'));
	print "<br/>";
	print_r(ps('new_value'));
	print "<br/>";
	print_r(ps('new_public'));
}

function theme_variables_admin($event, $step) {
	global $debug,$ps,$h,$event,$step,$something,$raw,$lines,$vars,$this_variable,$admin_privs;
	$message= '';
	$something = ps('something');
	$this_variable = gps('variable');
	// install woo_theme_variables form if required
	if (!safe_field('name', 'txp_form', "name='yoko_theme_variables'")) // form not found
		if (theme_variables_install())
			$message = "installed OK";
		else
			$message = "install failed";
	if ($step == 'update') {
		$new_name = trim(ps('new_var'));
		// validate new variable name
		if (strpos($new_name,' '))
			$message = 'spaces not allowed in variable name';
		if (strpos($new_name,'"') || strpos($new_name,"'"))
			$message = 'quotes not allowed in variable name';
		if (ps('ps_name')) // then other variables exist (i.e. this is not the first)
			if (array_key_exists($new_name,ps('ps_name')))
				$message = "$new_name already exists";
		// add new variable to form
		if ($message == '') {
			$new_form = theme_variables_form_update(ps('ps_name'),ps('ps_public'),$new_name,ps('new_value'),ps('new_public'));
			$ok = theme_variables_update(join("\n",$new_form));
			$ok ?
				$message = "updated" :
				$message = "update failed";
		}
	}
	if ($step == 'delete') {
		if (has_privs($admin_privs)) { // double check privileges because this operation uses GET VARS
			$new_form = theme_variables_form_delete($this_variable);
			$ok = theme_variables_update(join("\n",$new_form));
			$ok ?
				$message = "$this_variable deleted" :
				$message = "delete failed";
		}
		else
			$message = "insufficient privileges";
	}
	if ($something == "reset") {
		$ok = theme_variables_install('reset');
		$ok ?
			$message = "form reset" :
			$message = "reset failed";
	}
	if ($something == "copy") {
		$ok = theme_variables_install('copy');
		$ok ?
			$message = "form copied" :
			$message = "copy failed";
	}
	// read contents of form
	$raw = theme_variables_read_form();
	if (empty($raw))
		$message = "unable to read form";
	// break up into individual lines
	$lines = explode("\n",$raw['Form']);
	// extract variables & values from form
	$vars = theme_variables_get_vars($lines); // ERROR MESSAGE IF NO VARS???
	if (trim($raw['Form']) == '')
		$message = "form is empty";
	else if (empty($vars))
		$message = "no variables found";
	// generate page
	if (!empty($message))
		$message = 'yoko_theme_variables: <b>'.$message.'</b>';
	pagetop('theme_variables admin',$message);
	if ($debug) {
		theme_variables_debug();
		if ($step == "update") {
			print "<br/><h3>NEW FORM:</h3>";
			dmp($new_form);
		}
	}
	// output table & input form
	echo form(
		startTable('list').
		tr(
			hcell(theme_variables_tip('Theme Variable',$h['vr'])).
			hcell(theme_variables_tip('Value',$h['vl'])).
			hcell(has_privs($admin_privs)?theme_variables_tip('',$h['pu']):'') // hide Public heading if required
			).
		theme_variables_display_settings($vars).
		endTable().
		tag(
			fInput("submit", "update", "Update", "smallerbox").
			eInput("theme_variables_admin").sInput("update"),
			'div',
			' align="center" style="margin-top:2em"'
		)
	);
	// admin functions
	if (has_privs($admin_privs)) { // restrict access to admin functions
		$debug ? $reset_button = " ".theme_variables_tip("Reset",$h['rs']).fInput("radio", "something", "reset", "edit", "", "", "20", "1") : $reset_button = '';
	    echo form(
			tag("Theme Variables Admin","h3").
			graf(
				$reset_button.
				" ".theme_variables_tip("Backup",$h['cp']).
				fInput("radio", "something", "copy", "edit", "", "", "20", "1").
	        	fInput("submit", "do_something", "Do admin", "smallerbox","",'return verify(\''.gTxt('are_you_sure').'\')')
			).
	        eInput('theme_variables_admin').sInput('admin')
			,"text-align:center;margin-top:3em"
		);
	}
}
";s:8:"code_md5";s:32:"f83889c8f181d6faaa85c2ca4fa852dc";s:4:"type";s:1:"1";}