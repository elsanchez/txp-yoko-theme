a:11:{s:4:"name";s:13:"wet_quicklink";s:6:"status";s:1:"1";s:6:"author";s:16:"Robert Wetzlmayr";s:10:"author_uri";s:43:"http://awasteofwords.com/help/wet_quicklink";s:7:"version";s:5:"0.8.1";s:11:"description";s:49:"Pick and insert site internal links into articles";s:4:"help";s:1203:"	<h3>Quick internal link builder for Textpattern articles</h3>

	<p><strong>wet_quicklink</strong> is a plugin for Textpattern which extends the article edit screen to add an easy method for defining site internal links to other articles.</p>

	<p>Candidate articles can be chosen by a wide variety of methods, ranging from sorting by posting date or assigned section, to a live content search inside the articles&#8217; body or title.</p>

	<h4>usage:</h4>

	<ol>
		<li>Textpattern 4.3+ is required, wet_quicklink will <em>not</em> work with any prior versions.</li>
		<li>Install both <code>wet_quicklink</code> and <code>wet_peex</code> as a Textpattern plugin.</li>
		<li>Done. If all went well, the <a href="./?event=article" rel="nofollow">content &gt; edit</a> screen will sport a new menu entry called &#8220;Insert Link&#8221; located just above &#8220;Advanced&#8221;.</li>
	</ol>

	<p>Visit the <a href="http://awasteofwords.com/help/wet_quicklink" rel="nofollow">plugin help page</a> for more detailled instructions.</p>

	<h4>Licence and Disclaimer</h4>

	<p>This plug-in is released under the <a href="http://www.gnu.org/licenses/gpl.txt" rel="nofollow">Gnu General Public Licence</a>.</p>";s:4:"code";s:16031:"
global $textarray;

// launch the UI overlay
register_callback('wet_quicklink_menu', 'article_ui', 'extend_col_1');
// build the UI overlay
register_callback('wet_quicklink_clutch', 'article');
register_callback('wet_quicklink_css', 'admin_side', 'head_end');
register_callback('wet_quicklink_save_key', 'wet_quicklink', 'save_key');

// Don't let the unwashed masses fiddle with the way we add links
add_privs('wet_quicklink.preferences', '1,2');

// serve assorted resources
switch(gps('wet_rsrc')) {
	case 'quicklink_js':
		wet_quicklink_js();
		break;
	default:
		break;
}

// AJAX handler
switch(ps('wet_quicklink')) {
	case 'save_key':
		wet_quicklink_safe_key();
		break;
	default:
		break;
}

/**
 * Insert a menu entry in the first sidebar
 */
function wet_quicklink_menu()
{
	// add a link in left column to launch the overlay
	return '<h3 class="plain"><a href="#insert-link" id="insert-link">'.gTxt('wet_quicklink_insert_link').'</a></h3>'.n;
}

/**
 * Inject a few JS constants and pull in the JS worker file near the end of the page
 */
function wet_quicklink_clutch($event, $step)
{
	global $textarray;
	echo '<script src="./index.php?wet_rsrc=quicklink_js&amp;v=0.7" type="text/javascript"></script>'.n;

	// Link building patterns for various markup methods
	//
	// Patterns are used literally besides some special place holders:
	// {id}: article id
	// {title}: article title
	// {url}: fully qualified article URL per current URL mode
	// {text}: selected text from insertion target
	$patterns = array (
		'Textile' 		=> '"{text}({title})":{url}',
		'txp:permlink' 	=> '<txp:permlink id="{id}" title="{title}">{text}</txp:permlink>',
		'txp:wet_link' 	=> '<txp:wet_link href="{id}">{text}</txp:wet_link>',
		'HTML' 			=> '<a href="{url}" title="{title}" rel="bookmark">{text}</a>',
		'URL' 			=> '{url}'
	);

	// build a JS array of patterns, quote quoted quotes, escape closing tags
	foreach ($patterns as $key => $value) {
		$patterns_js[] = "'$key' : '".str_replace(array('"', '</'), array('\"', '<\/'), $value)."'";
	}
	$patterns_js = join(','.n.t, $patterns_js);

	// Gather link markup preferences
	$curr_key = get_pref('wet_quicklink.key', 'txp:permlink');
	$change_key_privs = has_privs('wet_quicklink.preferences') ? 'true' : 'false';

	// TODO: Will not work in PHP 4 :( $f = 'gTxt'; // ugly hack to trick PHP into invoking a function from the CFG HEREDOC later
	echo script_js( <<<CFG
	wet_quicklink.patterns = {
	$patterns_js
	};

	wet_quicklink.currKey = "$curr_key";
	wet_quicklink.changeKeyPrivs = $change_key_privs;

	wet_quicklink.gTxt = {
		title : 	"{$textarray['title']}",
		body : 		"{$textarray['tag_body']}",
		category1 : "{$textarray['category1']}",
		category2 : "{$textarray['category2']}",
		section : 	"{$textarray['section']}",
		posted : 	"{$textarray['posted']}",
		modified : 	"{$textarray['modified']}",
		permlink_mode : "{$textarray['permlink_mode']}",
		help : 		"{$textarray['help']}",
		search : 	"{$textarray['search']}",
		loading : 	"{$textarray['wet_quicklink_loading']}"
	}
CFG
);
	require_plugin('wet_peex'); // won't help for loading wet_peex on time, but point out the lack of it to unwary users.
}

/**
 * AJAX endpoint: Safe current key as system preference
 */
function wet_quicklink_safe_key()
{
	if (has_privs('wet_quicklink.preferences')) {
		set_pref('wet_quicklink.key', doSlash(ps('key')), 'wet_foo', 2);
		send_xml_response();
	} else {
		send_xml_response(array('http-status' => '403 Forbidden'));
	}
}

/**
 * Serve JS resource, as either an embedded resource or from a file while in development
 */
function wet_quicklink_js()
{
	$debug = false;
	while(@ob_end_clean());
	header("Content-Type: text/javascript; charset=utf-8");
	header("Expires: ".date("r", time() + ($debug ? -3600 : 3600)));
	header("Cache-Control: public");
	if ($debug) {
		readfile( dirname(__FILE__). '/wet_quicklink_js.js');
	} else {
		echo <<<js
/*=*=*=* script goes here */
/**
 * wet_quicklink: A Textpattern link builder plugin
 *
 * @author Robert Wetzlmayr
 * @link http://awasteofwords.com/help/wet_quicklink
 * @version 0.8.1
 */

var wet_quicklink = {
	pattern : "",
	currKey : "",
 	rows : 10,
	firstrow : 0,
	maxrows : 0,
	sortdir : "desc",
	crit : "lastmod",
	search : getCookie("wet_quicklink-search") || "",
	target : $("#body")[0], // insert links into article body unless focus changes

	paint : function () {
	   	// ui box
		var menu = "<form id='ql-menu'>";
		menu += "<label for='ql-search'>"+wet_quicklink.gTxt.search+":</label>";
		menu += "<input type='text' class='edit' size='15' id='ql-search' style='margin-right: 1em;' value='"+
			wet_quicklink.search+"' />";

		menu += "<input type='submit' class='smallerbox' id='ql-rev' class='smallerbox' value='&lt;' />";
		menu += "<span id='pager' style='padding: 0 0.4em;'></span>";
		menu += "<input type='submit' class='smallerbox' id='ql-fwd' value='&gt;' />";

		menu += "<label for='ql-pattern' style='margin-left: 2em;'>"+wet_quicklink.gTxt.permlink_mode+
			":</label><select id='ql-pattern'" + (wet_quicklink.changeKeyPrivs ? '' : ' disabled="disabled"') + ">";
		for(key in wet_quicklink.patterns) {
			menu += "<option value='"+key+"'>"+key+"</option>";
		}
		menu += "</select>";
		menu += "<a id='ql-help' href='http://awasteofwords.com/help/wet_quicklink' target='_blank'>"+
			wet_quicklink.gTxt.help+"</a>";
		menu += "<input type='submit' class='smallerbox' id='ql-close' value='&#215;' />";
		menu += "</form>";
		wet_quicklink.pattern = wet_quicklink.patterns[this.currKey] || wet_quicklink.patterns["Textile"];

	   	$("body").append("<div id='quicklink'>"+menu+
			"<div><table id='list'></table></div><p id='quicklink-msg'>"+wet_quicklink.gTxt.loading+"</p></div>");

		// preselect pattern option from saved cookie
		try {
			$("#ql-pattern option[value='"+this.currKey+"']")[0].selected = true;
		} catch(e) {}
		// waiting for the master's voice
	 	$("#quicklink").hide();
	 	$("#quicklink-msg").hide();
		this.behaviours();
	},

	// the worker function
	refresh : function () {
		var box = $("#list");
		box.empty();
		wet_quicklink.loading(true);
		$.get(
	 		"",
	 		{ wet_peex: "article", limit: wet_quicklink.rows.toString(), offset: wet_quicklink.firstrow.toString(),
				dir: wet_quicklink.sortdir, sort: wet_quicklink.crit, search: wet_quicklink.search },
			function(xml){
				wet_quicklink.maxrows = $("articles", xml).attr("count");

				$("#pager").html(Math.ceil(wet_quicklink.firstrow/wet_quicklink.rows + 1).toString() + "/"
					+ Math.ceil(wet_quicklink.maxrows/wet_quicklink.rows).toString());

	    			// paint the article table header
	    			var table = "<tr><th class='ql-id'>id</th>"+
					"<th class='ql-title'><a rel='title' href='#'>"+wet_quicklink.gTxt.title+"</a></th>"+
					"<th class='ql-teaser'><a rel='body_html' href='#'>"+wet_quicklink.gTxt.body+"</a></th>"+
					"<th class='ql-posted'><a rel='posted' href='#'>"+wet_quicklink.gTxt.posted+"</a></th>"+
					"<th class='ql-lastmod'><a rel='lastmod' href='#'>"+wet_quicklink.gTxt.modified+"</a></th>"+
					"<th class='ql-section'><a rel='section' href='#'>"+wet_quicklink.gTxt.section+"</a></th>"+
					"<th class='ql-category1'><a rel='category1' href='#'>"+wet_quicklink.gTxt.category1.replace(/ /g,"&#160;")+"</a></th>"+
					"<th class='ql-category2'><a rel='category2' href='#'>"+wet_quicklink.gTxt.category2.replace(/ /g,"&#160;")+"</a></th>"+
					"<th class='ql-url'><a rel='url' href='#'>url</a></th></tr>";

				// parse the XML response
				$("article", xml).each (
					function(i) {
		    			// paint one article row
		    			table += "<tr" +
						"><td class='ql-id'>" + $("id", this).text() +
						"</td><td class='ql-title'>" +"<a href='#'>" +
							wet_quicklink.htmlspecialchars($("title", this).text()) +"</a>"+
						"</td><td class='ql-teaser'>" +
							wet_quicklink.htmlspecialchars($("teaser", this).text())+ "&#8230;" +
						"</td><td class='ql-posted'>" +
							$("posted", this).text().replace(/ [0-9]*:[0-9]*:[0-9]*/, "") + // remove hh:mm:ss
		    			"</td><td class='ql-lastmod'>" +
							$("lastmod", this).text().replace(/ [0-9]*:[0-9]*:[0-9]*/, "") +
						"</td><td class='ql-section'>" +
							wet_quicklink.htmlspecialchars($("section", this).text()) +
						"</td><td class='ql-category1'>" +
							wet_quicklink.htmlspecialchars($("category[level='1']", this).text()) +
						"</td><td class='ql-category2'>" +
							wet_quicklink.htmlspecialchars($("category[level='2']", this).text()) +
						"</td><td class='ql-url'>" + $("permlink", this).text() +
						"</td></tr>";
					}
				);

				// inject table into ui
	    			box.html(table);

				// table heads act as ui for sort direction
				$("#list tr th a")
					.click( function() {
						// revert sort order just the second time around
						if(wet_quicklink.crit == $(this).attr("rel")) {
							wet_quicklink.sortdir = (wet_quicklink.sortdir == "desc" ? "asc" : "desc");
						}
						// define sort criterion
						wet_quicklink.crit = $(this).attr("rel");
						wet_quicklink.firstrow = 0;
						wet_quicklink.refresh();
						return false;
					});

				// zebra stripes
				$('#list tr:odd').addClass('odd');

				// style table heads as indicators for sort direction
				$("#list tr th a[rel='"+wet_quicklink.crit+"']").addClass(wet_quicklink.sortdir);
				wet_quicklink.loading(false);

				/**
				 * Insert content at caret position
				 * @link http://alexking.org/blog/2003/06/02/inserting-at-the-cursor-using-javascript
				 */
				function edInsertContent(myField, myValue) {
					//IE support
					if (document.selection) {
						myField.focus();
						sel = document.selection.createRange();
						sel.text = myValue;
						myField.focus();
					}
					//MOZILLA/NETSCAPE support
					else if (myField.selectionStart || myField.selectionStart == '0') {
						var startPos = myField.selectionStart;
						var endPos = myField.selectionEnd;
						var scrollTop = myField.scrollTop;
						myField.value = myField.value.substring(0, startPos)
						              + myValue
				                      + myField.value.substring(endPos, myField.value.length);
						myField.focus();
						myField.selectionStart = startPos + myValue.length;
						myField.selectionEnd = startPos + myValue.length;
						myField.scrollTop = scrollTop;
					} else {
						myField.value += myValue;
						myField.focus();
					}
				}

				function getSel(myField) {
					//IE support
					if (document.selection) {
						return document.selection.createRange().text;
					}
					//MOZILLA/NETSCAPE support
					else if (myField.selectionStart || myField.selectionStart == '0') {
						var startPos = myField.selectionStart;
						var endPos = myField.selectionEnd;
						return myField.value.substring(startPos, endPos);
					} else {
						return "";
					}
				}

				// insert permlink on title click
				$('td.ql-title a').click(
					function() {
						// find the insertion target
						var t = wet_quicklink.target;
						// build tag
						var tag = wet_quicklink.pattern;
						var cell = $(this).parent(); // td > a

						var id = cell.siblings(".ql-id").text();  // the article id
						tag = tag.replace(/{id}/gi, id);

						var url = cell.siblings(".ql-url").text();  // the url
						tag = tag.replace(/{url}/gi, url);

						var title = cell.children("a").text();  // the title
						tag = tag.replace(/{title}/gi, title);

						tag = tag.replace(/{text}/gi, getSel(t));
						edInsertContent(t, tag);
						$("#quicklink").hide();
						return false;
					}
				);
	 		}
		);
	},

	// launch overlay on menu click
	hook : function () {
		$('#insert-link').click(
			function() {
				wet_quicklink.refresh();
				$("#quicklink").show();
				return false;
			}
		);
	},

	// add behaviours
	behaviours : function() {
		$('input#ql-close').click(
			function() {
				$("#quicklink").hide();
				return false;
			}
		);

		$('input#ql-fwd').click(
			function() {
				var here = wet_quicklink.firstrow;
				if(wet_quicklink.firstrow + wet_quicklink.rows < wet_quicklink.maxrows) {
					wet_quicklink.firstrow += wet_quicklink.rows;
				}
				if(here != wet_quicklink.firstrow) wet_quicklink.refresh();
				return false;
			}
		);

		$('input#ql-rev').click(
			function() {
				var here = wet_quicklink.firstrow;
				if(wet_quicklink.firstrow >= wet_quicklink.rows) {
					wet_quicklink.firstrow -= wet_quicklink.rows;
				}
				if(here != wet_quicklink.firstrow) wet_quicklink.refresh();
				return false;
			}
		);

		$('input#ql-search').keyup(
			function() {
				if(this.value != wet_quicklink.search) {
					wet_quicklink.firstrow = 0;
					wet_quicklink.search = this.value;
					setCookie("wet_quicklink-search", this.value);

					try {
						window.clearTimeout(this.lazy);
					} catch(e) {}
					this.lazy = window.setTimeout(wet_quicklink.refresh, 750);
				}
			}
		);

		$('select#ql-pattern').click(
			function() {
				var currKey = this.options[this.options.selectedIndex].value;
				wet_quicklink.pattern = wet_quicklink.patterns[currKey];
				sendAsyncEvent(
					{
						wet_quicklink: 'save_key',
						key: currKey
					}
				);
				return false;
			}
		);
	},

	htmlspecialchars : function (s) {
		s = s.replace(/&/g,"&amp;");
		s = s.replace(/</g,"&lt;");
		s = s.replace(/>/g,"&gt;");
		s = s.replace(/"/g,"&quot;");
		return s;
	},

	status : function (s, is_ok) {
		var msg = $("#quicklink-msg");
		msg.html(s);
		if(is_ok) {
			msg.addClass("success");
		} /* @todo remove class later */
		msg.fadeIn("slow");
		msg.fadeOut("slow");
	},

	loading : function (is_on) {
		var msg = $("#quicklink-msg");
		msg.addClass("success");	 /* @todo remove class later */
		if(is_on) {
			msg.fadeIn("slow");
		} else {
			msg.fadeOut("slow");
		}
	}
};

$(document).ready(
	function(){
		wet_quicklink.hook();
		wet_quicklink.paint();

		// insertion targets
		var targets = new Array("title", "body", "excerpt",
			"custom-1", "custom-2", "custom-3", "custom-4", "custom-5",
			"custom-6", "custom-7", "custom-8", "custom-9", "custom-10",
			"keywords");
		var i, l = targets.length;
		// click handler stores "active" textarea/input element
		for (i = 0; i < l; i++) {
			var t = $("#"+targets[i]);
			if(t.length == 0) continue;
			t.click(function() {
					wet_quicklink.target = this;
				}
			);
		}
	}
);
/*=*=*=* script ends here */
js;
	}
	exit();
}

function wet_quicklink_css()
{
	global $event;
	if ($event != 'article') return;

	echo <<<css
<style type="text/css">
div#quicklink {
	border: 3px solid #ffcc33;
	padding: 0.5em;
	background-color: white;
	position: absolute;
	z-index: 999;
	top: 7em; right: 1em;
	width: auto; height: auto;
	max-height: 90%;
	max-width: 75em;
}

div#quicklink div {
	overflow: auto;
}

div#quicklink #ql-close {
	position: absolute;
	right: 2px; top: 2px;
	width: 16px; height: 16px;
	padding: 0px;
	background-color: #c66;
	color: #fff;
}

div#quicklink #ql-help {
	position: absolute;
	right: 2.5em; top: 4px;
}

div#quicklink table {
	width: 100%;
	margin-top: 0.5em;
	table-layout: fixed;
}
div#quicklink .ql-id, div#quicklink .ql-url {
	display: none;
}

div#quicklink td, div#quicklink th {
	overflow: hidden;
}

div#quicklink .ql-title, div#quicklink .ql-teaser {
	width: 15em;
}

div#quicklink .ql-section {
	width: 6em;
}

div#quicklink .ql-posted, div#quicklink .ql-lastmod {
	width: 7em;
}

div#quicklink .ql-category1, div#quicklink .ql-category2 {
	width: 8em;
}

div#quicklink tr.odd {
	background-color: #f8f8ff;
}

div#quicklink td {
	padding: 0.2em 0;
}

div#quicklink th {
	padding: 0.2em 0.2em;
}

div#quicklink th a.asc {
	background: transparent url(txp_img/arrowupdn.gif) no-repeat right 2px;
	padding-right: 14px;
}

div#quicklink th a.desc {
	background: transparent url(txp_img/arrowupdn.gif) no-repeat right -18px;
	padding-right: 14px;
}

#quicklink-msg {
	position: absolute;
	top: 0;
	right: 0;
	padding: 0.5em 2em;
}

#quicklink-msg.success {
	color: white;
	background-color: #8c8;
}

#quicklink-msg.failure {
	color: white;
	font-weight: bold;
	background-color: #f00;
}
</style>

css;
}
";s:12:"code_restore";s:16031:"
global $textarray;

// launch the UI overlay
register_callback('wet_quicklink_menu', 'article_ui', 'extend_col_1');
// build the UI overlay
register_callback('wet_quicklink_clutch', 'article');
register_callback('wet_quicklink_css', 'admin_side', 'head_end');
register_callback('wet_quicklink_save_key', 'wet_quicklink', 'save_key');

// Don't let the unwashed masses fiddle with the way we add links
add_privs('wet_quicklink.preferences', '1,2');

// serve assorted resources
switch(gps('wet_rsrc')) {
	case 'quicklink_js':
		wet_quicklink_js();
		break;
	default:
		break;
}

// AJAX handler
switch(ps('wet_quicklink')) {
	case 'save_key':
		wet_quicklink_safe_key();
		break;
	default:
		break;
}

/**
 * Insert a menu entry in the first sidebar
 */
function wet_quicklink_menu()
{
	// add a link in left column to launch the overlay
	return '<h3 class="plain"><a href="#insert-link" id="insert-link">'.gTxt('wet_quicklink_insert_link').'</a></h3>'.n;
}

/**
 * Inject a few JS constants and pull in the JS worker file near the end of the page
 */
function wet_quicklink_clutch($event, $step)
{
	global $textarray;
	echo '<script src="./index.php?wet_rsrc=quicklink_js&amp;v=0.7" type="text/javascript"></script>'.n;

	// Link building patterns for various markup methods
	//
	// Patterns are used literally besides some special place holders:
	// {id}: article id
	// {title}: article title
	// {url}: fully qualified article URL per current URL mode
	// {text}: selected text from insertion target
	$patterns = array (
		'Textile' 		=> '"{text}({title})":{url}',
		'txp:permlink' 	=> '<txp:permlink id="{id}" title="{title}">{text}</txp:permlink>',
		'txp:wet_link' 	=> '<txp:wet_link href="{id}">{text}</txp:wet_link>',
		'HTML' 			=> '<a href="{url}" title="{title}" rel="bookmark">{text}</a>',
		'URL' 			=> '{url}'
	);

	// build a JS array of patterns, quote quoted quotes, escape closing tags
	foreach ($patterns as $key => $value) {
		$patterns_js[] = "'$key' : '".str_replace(array('"', '</'), array('\"', '<\/'), $value)."'";
	}
	$patterns_js = join(','.n.t, $patterns_js);

	// Gather link markup preferences
	$curr_key = get_pref('wet_quicklink.key', 'txp:permlink');
	$change_key_privs = has_privs('wet_quicklink.preferences') ? 'true' : 'false';

	// TODO: Will not work in PHP 4 :( $f = 'gTxt'; // ugly hack to trick PHP into invoking a function from the CFG HEREDOC later
	echo script_js( <<<CFG
	wet_quicklink.patterns = {
	$patterns_js
	};

	wet_quicklink.currKey = "$curr_key";
	wet_quicklink.changeKeyPrivs = $change_key_privs;

	wet_quicklink.gTxt = {
		title : 	"{$textarray['title']}",
		body : 		"{$textarray['tag_body']}",
		category1 : "{$textarray['category1']}",
		category2 : "{$textarray['category2']}",
		section : 	"{$textarray['section']}",
		posted : 	"{$textarray['posted']}",
		modified : 	"{$textarray['modified']}",
		permlink_mode : "{$textarray['permlink_mode']}",
		help : 		"{$textarray['help']}",
		search : 	"{$textarray['search']}",
		loading : 	"{$textarray['wet_quicklink_loading']}"
	}
CFG
);
	require_plugin('wet_peex'); // won't help for loading wet_peex on time, but point out the lack of it to unwary users.
}

/**
 * AJAX endpoint: Safe current key as system preference
 */
function wet_quicklink_safe_key()
{
	if (has_privs('wet_quicklink.preferences')) {
		set_pref('wet_quicklink.key', doSlash(ps('key')), 'wet_foo', 2);
		send_xml_response();
	} else {
		send_xml_response(array('http-status' => '403 Forbidden'));
	}
}

/**
 * Serve JS resource, as either an embedded resource or from a file while in development
 */
function wet_quicklink_js()
{
	$debug = false;
	while(@ob_end_clean());
	header("Content-Type: text/javascript; charset=utf-8");
	header("Expires: ".date("r", time() + ($debug ? -3600 : 3600)));
	header("Cache-Control: public");
	if ($debug) {
		readfile( dirname(__FILE__). '/wet_quicklink_js.js');
	} else {
		echo <<<js
/*=*=*=* script goes here */
/**
 * wet_quicklink: A Textpattern link builder plugin
 *
 * @author Robert Wetzlmayr
 * @link http://awasteofwords.com/help/wet_quicklink
 * @version 0.8.1
 */

var wet_quicklink = {
	pattern : "",
	currKey : "",
 	rows : 10,
	firstrow : 0,
	maxrows : 0,
	sortdir : "desc",
	crit : "lastmod",
	search : getCookie("wet_quicklink-search") || "",
	target : $("#body")[0], // insert links into article body unless focus changes

	paint : function () {
	   	// ui box
		var menu = "<form id='ql-menu'>";
		menu += "<label for='ql-search'>"+wet_quicklink.gTxt.search+":</label>";
		menu += "<input type='text' class='edit' size='15' id='ql-search' style='margin-right: 1em;' value='"+
			wet_quicklink.search+"' />";

		menu += "<input type='submit' class='smallerbox' id='ql-rev' class='smallerbox' value='&lt;' />";
		menu += "<span id='pager' style='padding: 0 0.4em;'></span>";
		menu += "<input type='submit' class='smallerbox' id='ql-fwd' value='&gt;' />";

		menu += "<label for='ql-pattern' style='margin-left: 2em;'>"+wet_quicklink.gTxt.permlink_mode+
			":</label><select id='ql-pattern'" + (wet_quicklink.changeKeyPrivs ? '' : ' disabled="disabled"') + ">";
		for(key in wet_quicklink.patterns) {
			menu += "<option value='"+key+"'>"+key+"</option>";
		}
		menu += "</select>";
		menu += "<a id='ql-help' href='http://awasteofwords.com/help/wet_quicklink' target='_blank'>"+
			wet_quicklink.gTxt.help+"</a>";
		menu += "<input type='submit' class='smallerbox' id='ql-close' value='&#215;' />";
		menu += "</form>";
		wet_quicklink.pattern = wet_quicklink.patterns[this.currKey] || wet_quicklink.patterns["Textile"];

	   	$("body").append("<div id='quicklink'>"+menu+
			"<div><table id='list'></table></div><p id='quicklink-msg'>"+wet_quicklink.gTxt.loading+"</p></div>");

		// preselect pattern option from saved cookie
		try {
			$("#ql-pattern option[value='"+this.currKey+"']")[0].selected = true;
		} catch(e) {}
		// waiting for the master's voice
	 	$("#quicklink").hide();
	 	$("#quicklink-msg").hide();
		this.behaviours();
	},

	// the worker function
	refresh : function () {
		var box = $("#list");
		box.empty();
		wet_quicklink.loading(true);
		$.get(
	 		"",
	 		{ wet_peex: "article", limit: wet_quicklink.rows.toString(), offset: wet_quicklink.firstrow.toString(),
				dir: wet_quicklink.sortdir, sort: wet_quicklink.crit, search: wet_quicklink.search },
			function(xml){
				wet_quicklink.maxrows = $("articles", xml).attr("count");

				$("#pager").html(Math.ceil(wet_quicklink.firstrow/wet_quicklink.rows + 1).toString() + "/"
					+ Math.ceil(wet_quicklink.maxrows/wet_quicklink.rows).toString());

	    			// paint the article table header
	    			var table = "<tr><th class='ql-id'>id</th>"+
					"<th class='ql-title'><a rel='title' href='#'>"+wet_quicklink.gTxt.title+"</a></th>"+
					"<th class='ql-teaser'><a rel='body_html' href='#'>"+wet_quicklink.gTxt.body+"</a></th>"+
					"<th class='ql-posted'><a rel='posted' href='#'>"+wet_quicklink.gTxt.posted+"</a></th>"+
					"<th class='ql-lastmod'><a rel='lastmod' href='#'>"+wet_quicklink.gTxt.modified+"</a></th>"+
					"<th class='ql-section'><a rel='section' href='#'>"+wet_quicklink.gTxt.section+"</a></th>"+
					"<th class='ql-category1'><a rel='category1' href='#'>"+wet_quicklink.gTxt.category1.replace(/ /g,"&#160;")+"</a></th>"+
					"<th class='ql-category2'><a rel='category2' href='#'>"+wet_quicklink.gTxt.category2.replace(/ /g,"&#160;")+"</a></th>"+
					"<th class='ql-url'><a rel='url' href='#'>url</a></th></tr>";

				// parse the XML response
				$("article", xml).each (
					function(i) {
		    			// paint one article row
		    			table += "<tr" +
						"><td class='ql-id'>" + $("id", this).text() +
						"</td><td class='ql-title'>" +"<a href='#'>" +
							wet_quicklink.htmlspecialchars($("title", this).text()) +"</a>"+
						"</td><td class='ql-teaser'>" +
							wet_quicklink.htmlspecialchars($("teaser", this).text())+ "&#8230;" +
						"</td><td class='ql-posted'>" +
							$("posted", this).text().replace(/ [0-9]*:[0-9]*:[0-9]*/, "") + // remove hh:mm:ss
		    			"</td><td class='ql-lastmod'>" +
							$("lastmod", this).text().replace(/ [0-9]*:[0-9]*:[0-9]*/, "") +
						"</td><td class='ql-section'>" +
							wet_quicklink.htmlspecialchars($("section", this).text()) +
						"</td><td class='ql-category1'>" +
							wet_quicklink.htmlspecialchars($("category[level='1']", this).text()) +
						"</td><td class='ql-category2'>" +
							wet_quicklink.htmlspecialchars($("category[level='2']", this).text()) +
						"</td><td class='ql-url'>" + $("permlink", this).text() +
						"</td></tr>";
					}
				);

				// inject table into ui
	    			box.html(table);

				// table heads act as ui for sort direction
				$("#list tr th a")
					.click( function() {
						// revert sort order just the second time around
						if(wet_quicklink.crit == $(this).attr("rel")) {
							wet_quicklink.sortdir = (wet_quicklink.sortdir == "desc" ? "asc" : "desc");
						}
						// define sort criterion
						wet_quicklink.crit = $(this).attr("rel");
						wet_quicklink.firstrow = 0;
						wet_quicklink.refresh();
						return false;
					});

				// zebra stripes
				$('#list tr:odd').addClass('odd');

				// style table heads as indicators for sort direction
				$("#list tr th a[rel='"+wet_quicklink.crit+"']").addClass(wet_quicklink.sortdir);
				wet_quicklink.loading(false);

				/**
				 * Insert content at caret position
				 * @link http://alexking.org/blog/2003/06/02/inserting-at-the-cursor-using-javascript
				 */
				function edInsertContent(myField, myValue) {
					//IE support
					if (document.selection) {
						myField.focus();
						sel = document.selection.createRange();
						sel.text = myValue;
						myField.focus();
					}
					//MOZILLA/NETSCAPE support
					else if (myField.selectionStart || myField.selectionStart == '0') {
						var startPos = myField.selectionStart;
						var endPos = myField.selectionEnd;
						var scrollTop = myField.scrollTop;
						myField.value = myField.value.substring(0, startPos)
						              + myValue
				                      + myField.value.substring(endPos, myField.value.length);
						myField.focus();
						myField.selectionStart = startPos + myValue.length;
						myField.selectionEnd = startPos + myValue.length;
						myField.scrollTop = scrollTop;
					} else {
						myField.value += myValue;
						myField.focus();
					}
				}

				function getSel(myField) {
					//IE support
					if (document.selection) {
						return document.selection.createRange().text;
					}
					//MOZILLA/NETSCAPE support
					else if (myField.selectionStart || myField.selectionStart == '0') {
						var startPos = myField.selectionStart;
						var endPos = myField.selectionEnd;
						return myField.value.substring(startPos, endPos);
					} else {
						return "";
					}
				}

				// insert permlink on title click
				$('td.ql-title a').click(
					function() {
						// find the insertion target
						var t = wet_quicklink.target;
						// build tag
						var tag = wet_quicklink.pattern;
						var cell = $(this).parent(); // td > a

						var id = cell.siblings(".ql-id").text();  // the article id
						tag = tag.replace(/{id}/gi, id);

						var url = cell.siblings(".ql-url").text();  // the url
						tag = tag.replace(/{url}/gi, url);

						var title = cell.children("a").text();  // the title
						tag = tag.replace(/{title}/gi, title);

						tag = tag.replace(/{text}/gi, getSel(t));
						edInsertContent(t, tag);
						$("#quicklink").hide();
						return false;
					}
				);
	 		}
		);
	},

	// launch overlay on menu click
	hook : function () {
		$('#insert-link').click(
			function() {
				wet_quicklink.refresh();
				$("#quicklink").show();
				return false;
			}
		);
	},

	// add behaviours
	behaviours : function() {
		$('input#ql-close').click(
			function() {
				$("#quicklink").hide();
				return false;
			}
		);

		$('input#ql-fwd').click(
			function() {
				var here = wet_quicklink.firstrow;
				if(wet_quicklink.firstrow + wet_quicklink.rows < wet_quicklink.maxrows) {
					wet_quicklink.firstrow += wet_quicklink.rows;
				}
				if(here != wet_quicklink.firstrow) wet_quicklink.refresh();
				return false;
			}
		);

		$('input#ql-rev').click(
			function() {
				var here = wet_quicklink.firstrow;
				if(wet_quicklink.firstrow >= wet_quicklink.rows) {
					wet_quicklink.firstrow -= wet_quicklink.rows;
				}
				if(here != wet_quicklink.firstrow) wet_quicklink.refresh();
				return false;
			}
		);

		$('input#ql-search').keyup(
			function() {
				if(this.value != wet_quicklink.search) {
					wet_quicklink.firstrow = 0;
					wet_quicklink.search = this.value;
					setCookie("wet_quicklink-search", this.value);

					try {
						window.clearTimeout(this.lazy);
					} catch(e) {}
					this.lazy = window.setTimeout(wet_quicklink.refresh, 750);
				}
			}
		);

		$('select#ql-pattern').click(
			function() {
				var currKey = this.options[this.options.selectedIndex].value;
				wet_quicklink.pattern = wet_quicklink.patterns[currKey];
				sendAsyncEvent(
					{
						wet_quicklink: 'save_key',
						key: currKey
					}
				);
				return false;
			}
		);
	},

	htmlspecialchars : function (s) {
		s = s.replace(/&/g,"&amp;");
		s = s.replace(/</g,"&lt;");
		s = s.replace(/>/g,"&gt;");
		s = s.replace(/"/g,"&quot;");
		return s;
	},

	status : function (s, is_ok) {
		var msg = $("#quicklink-msg");
		msg.html(s);
		if(is_ok) {
			msg.addClass("success");
		} /* @todo remove class later */
		msg.fadeIn("slow");
		msg.fadeOut("slow");
	},

	loading : function (is_on) {
		var msg = $("#quicklink-msg");
		msg.addClass("success");	 /* @todo remove class later */
		if(is_on) {
			msg.fadeIn("slow");
		} else {
			msg.fadeOut("slow");
		}
	}
};

$(document).ready(
	function(){
		wet_quicklink.hook();
		wet_quicklink.paint();

		// insertion targets
		var targets = new Array("title", "body", "excerpt",
			"custom-1", "custom-2", "custom-3", "custom-4", "custom-5",
			"custom-6", "custom-7", "custom-8", "custom-9", "custom-10",
			"keywords");
		var i, l = targets.length;
		// click handler stores "active" textarea/input element
		for (i = 0; i < l; i++) {
			var t = $("#"+targets[i]);
			if(t.length == 0) continue;
			t.click(function() {
					wet_quicklink.target = this;
				}
			);
		}
	}
);
/*=*=*=* script ends here */
js;
	}
	exit();
}

function wet_quicklink_css()
{
	global $event;
	if ($event != 'article') return;

	echo <<<css
<style type="text/css">
div#quicklink {
	border: 3px solid #ffcc33;
	padding: 0.5em;
	background-color: white;
	position: absolute;
	z-index: 999;
	top: 7em; right: 1em;
	width: auto; height: auto;
	max-height: 90%;
	max-width: 75em;
}

div#quicklink div {
	overflow: auto;
}

div#quicklink #ql-close {
	position: absolute;
	right: 2px; top: 2px;
	width: 16px; height: 16px;
	padding: 0px;
	background-color: #c66;
	color: #fff;
}

div#quicklink #ql-help {
	position: absolute;
	right: 2.5em; top: 4px;
}

div#quicklink table {
	width: 100%;
	margin-top: 0.5em;
	table-layout: fixed;
}
div#quicklink .ql-id, div#quicklink .ql-url {
	display: none;
}

div#quicklink td, div#quicklink th {
	overflow: hidden;
}

div#quicklink .ql-title, div#quicklink .ql-teaser {
	width: 15em;
}

div#quicklink .ql-section {
	width: 6em;
}

div#quicklink .ql-posted, div#quicklink .ql-lastmod {
	width: 7em;
}

div#quicklink .ql-category1, div#quicklink .ql-category2 {
	width: 8em;
}

div#quicklink tr.odd {
	background-color: #f8f8ff;
}

div#quicklink td {
	padding: 0.2em 0;
}

div#quicklink th {
	padding: 0.2em 0.2em;
}

div#quicklink th a.asc {
	background: transparent url(txp_img/arrowupdn.gif) no-repeat right 2px;
	padding-right: 14px;
}

div#quicklink th a.desc {
	background: transparent url(txp_img/arrowupdn.gif) no-repeat right -18px;
	padding-right: 14px;
}

#quicklink-msg {
	position: absolute;
	top: 0;
	right: 0;
	padding: 0.5em 2em;
}

#quicklink-msg.success {
	color: white;
	background-color: #8c8;
}

#quicklink-msg.failure {
	color: white;
	font-weight: bold;
	background-color: #f00;
}
</style>

css;
}
";s:8:"code_md5";s:32:"7a23e047cae2f73a4e34f943a0b06a40";s:4:"type";s:1:"3";}